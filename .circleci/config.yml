version: 2.1
orbs:
  slack: circleci/slack@3.4.2

executors:
  docker-executor:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester

jobs:
  build:
    executor: docker-executor
    steps:
      - run: echo "CI Done"

  ensure_env:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: 'Setup virtual env'
          command: |
            python3 -mvenv /usr/local/share/virtualenvs/tap-shopify
            source /usr/local/share/virtualenvs/tap-shopify/bin/activate
            pip install -U 'pip==23.3.2' 'setuptools<56.0.0'
            pip install .[dev]
      - persist_to_workspace:
          root: /usr/local/share/virtualenvs
          paths:
            - tap-shopify
            - dev_env.sh
  run_pylint:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-shopify/bin/activate
            pylint tap_shopify -d missing-docstring,too-many-branches,consider-using-f-string,consider-using-generator,consider-using-dict-items,unnecessary-dunder-call,duplicate-code
  json_validator:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'JSON Validator'
          command: |
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            stitch-validate-json tap_shopify/schemas/*.json
  run_unit_tests:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Unit Tests'
          command: |
            source /usr/local/share/virtualenvs/tap-shopify/bin/activate
            pip install nose2 parameterized nose2[coverage_plugin]>=0.6.5
            nose2 --with-coverage -v -s tests/unittests
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: htmlcov
  run_integration_tests:
    executor: docker-executor
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Integration Tests'
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            mkdir /tmp/${CIRCLE_PROJECT_REPONAME}
            export STITCH_CONFIG_DIR=/tmp/${CIRCLE_PROJECT_REPONAME}
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            circleci tests glob "tests/test_*.py" | circleci tests split > ./tests-to-run
            if [ -s ./tests-to-run ]; then
              for test_file in $(cat ./tests-to-run)
              do
                echo $test_file > $STITCH_CONFIG_DIR/tap_test.txt
                run-test --tap=${CIRCLE_PROJECT_REPONAME} $test_file
              done
            fi
      - slack/notify-on-failure:
          only_for_branches: master
      - store_artifacts:
          path: /tmp/tap-shopify

workflows:
  version: 2
  commit: &commit_jobs
    jobs:
      - ensure_env:
          context:
            - circleci-user
            - tier-1-tap-user
      - run_pylint:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - json_validator:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_unit_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_integration_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - run_pylint
            - run_unit_tests
            - run_integration_tests
  build_daily:
    <<: *commit_jobs
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
